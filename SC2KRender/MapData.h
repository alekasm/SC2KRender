#pragma once
#include <Windows.h>
#include <string>
#define TILES_DIMENSION 128

#define FORM 0x4d524f46
#define ISCD 0x48444353 //Referred to as SCDH

enum TileType
{
  ETT_FLAT, // 0x00
  ETT_SLOPE_N, // 0x01
  ETT_SLOPE_E, // 0x02
  ETT_SLOPE_S, // 0x03
  ETT_SLOPE_W, // 0x04
  ETT_SLOPE_NE, // 0x05
  ETT_SLOPE_SE, // 0x06
  ETT_SLOPE_SW, // 0x07
  ETT_SLOPE_NW, // 0x08
  ETT_CORNER_NE, // 0x09
  ETT_CORNER_SE, // 0xA
  ETT_CORNER_SW, // 0xB
  ETT_CORNER_NW, // 0xC
  ETT_HIGHGROUND, // 0xD
  ETT_UNUSED_0E, // 0xE
  ETT_UNUSED_0F, // 0xF
  ETT_UNDERWATER_FLAT, // 0x10
  ETT_UNDERWATER_SLOPE_N, // 0x11
  ETT_UNDERWATER_SLOPE_E,// 0x11
  ETT_UNDERWATER_SLOPE_S, // 0x13
  ETT_UNDERWATER_SLOPE_W, // 0x14
  ETT_UNDERWATER_SLOPE_NE, // 0x15
  ETT_UNDERWATER_SLOPE_SE, // 0x16
  ETT_UNDERWATER_SLOPE_SW, // 0x17
  ETT_UNDERWATER_SLOPE_NW, // 0x18
  ETT_UNDERWATER_CORNER_NE,// 0x19
  ETT_UNDERWATER_CORNER_SE, // 0x1A
  ETT_UNDERWATER_CORNER_SW,// 0x1B
  ETT_UNDERWATER_CORNER_NW,// 0x1C
  ETT_UNDERWATER_HIGHGROUND,// 0x1D
  ETT_UNUSED_1E,// 0x1E
  ETT_UNUSED_1F,// 0x1F
  ETT_WATER_SUBMERGED_FLAT,// 0x20
  ETT_WATER_SUBMERGED_SLOPE_N,// 0x21
  ETT_WATER_SUBMERGED_SLOPE_E, // 0x22
  ETT_WATER_SUBMERGED_SLOPE_S,// 0x23
  ETT_WATER_SUBMERGED_SLOPE_W,// 0x24
  ETT_WATER_SUBMERGED_SLOPE_NE,// 0x25
  ETT_WATER_SUBMERGED_SLOPE_SE,// 0x26
  ETT_WATER_SUBMERGED_SLOPE_SW,// 0x27
  ETT_WATER_SUBMERGED_SLOPE_NW,// 0x28
  ETT_WATER_SUBMERGED_CORNER_NE,// 0x29
  ETT_WATER_SUBMERGED_CORNER_SE, // 0x2A
  ETT_WATER_SUBMERGED_CORNER_SW, // 0x2B
  ETT_WATER_SUBMERGED_CORNER_NW,// 0x2C
  ETT_WATER_SUBMERGED_HIGHGROUND, // 0x2D
  ETT_UNUSED_2E, // 0x2E
  ETT_UNUSED_2F, // 0x2F
  ETT_SURFACE_WATER_FLAT, // 0x30
  ETT_SURFACE_WATER_SLOPE_N, // 0x31
  ETT_SURFACE_WATER_SLOPE_E, // 0x32
  ETT_SURFACE_WATER_SLOPE_S, // 0x33
  ETT_SURFACE_WATER_SLOPE_W, // 0x34
  ETT_SURFACE_WATER_SLOPE_NE, // 0x35
  ETT_SURFACE_WATER_SLOPE_SE, // 0x36
  ETT_SURFACE_WATER_SLOPE_SW, // 0x37
  ETT_SURFACE_WATER_SLOPE_NW, // 0x38
  ETT_SURFACE_WATER_CORNER_NE, // 0x39
  ETT_SURFACE_WATER_CORNER_SE,// 0x3A
  ETT_SURFACE_WATER_CORNER_SW, // 0x3B
  ETT_SURFACE_WATER_CORNER_NW, // 0x3C
  ETT_SURFACE_WATER_HIGHGROUND, // 0x3D
  ETT_WATERFALL, // 0x3E
  ETT_UNUSED_3F,// 0x3F
  ETT_SURFACE_WATER_CANAL_WE,// 0x40
  ETT_SURFACE_WATER_CANAL_NS, // 0x41
  ETT_SURFACE_WATER_BAY_OPEN_S, // 0x42
  ETT_SURFACE_WATER_BAY_OPEN_W, // 0x43
  ETT_SURFACE_WATER_BAY_OPEN_N, // 0x44
  ETT_SURFACE_WATER_BAY_OPEN_E // 0x45
};

struct MapTile
{
  int height;
  bool water;
  TileType type;
};

struct MapSegmentHeader
{
  char type[4];
  uint32_t totalbytes; 
};

struct MapHeader
{
  uint32_t iff_file;
  uint32_t totalbytes; //Stored in big-endian
  uint32_t file_type;
};

struct Map
{
  MapHeader header;
  MapTile* tiles;
  int sea_level;
  std::string city_name;
  //uint32_t founding_year;
  //uint32_t days_elapsed;
  //int32_t money_supply;
};